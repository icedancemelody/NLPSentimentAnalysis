{"version":3,"sources":["App/Nav/Nav.tsx","APIs.ts","App/MultipleAnalyses/drawPieCharts.ts","App/MultipleAnalyses/dataProcesser.ts","App/MultipleAnalyses/useMultipleAnalyses.ts","App/useApp.ts","App/SingleAnalyses/SingleAnalyses.tsx","App/SingleAnalyses/useSingleAnalyses.ts","App/MultipleAnalyses/MultipleAnalyses.tsx","App/App.tsx","index.tsx"],"names":["Nav","tabs","currentTab","goToTab","data-selected-index","map","tab","idx","onClick","name","baseURL","fetchResult","comment","a","fetch","method","body","JSON","stringify","response","json","responseJson","data","drawPieCharts","Element","length","echarts","setOption","tooltip","trigger","series","type","radius","avoidLabelOverlap","itemStyle","borderRadius","borderColor","borderWidth","label","show","position","labelLine","dataProcesser","getDataForAttitudePie","dataArray","reduce","acc","cur","includes","attitude","value","getDataForDimensionPie","dimension","defaultResults","component","useState","commentText","setCommentText","setAttitude","setDimension","reply","setReply","textFeatures","setTextFeatures","textAreaRef","React","createRef","current","dataString","parse","analyze","useSingleAnalyses","id","className","item","index","ref","results","setResults","inputData","setInputData","inputFileRef","dimensionPieChartRef","attitudePieChartRef","files","useEffect","dp","inputFileOnChange","fileReader","FileReader","onload","e","target","result","toString","readAsText","useMultipleAnalyses","onChange","style","display","App","eventsHandle","setCurrentTab","tabIndex","getEventsHandle","useApp","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sTAQe,SAASA,EAAT,GAAuD,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,WAAYC,EAAqB,EAArBA,QAC5C,OACI,8BACI,oBAAIC,sBAAqBF,EAAa,EAAtC,SAEQD,EAAKI,KAAI,SAACC,EAAKC,GAAN,OACL,oBAAIC,QAAS,kBAAML,EAAQI,IAA3B,SACKD,EAAIG,MAD6BF,U,kDCdxDG,EAAU,wBAET,SAAeC,EAAtB,kC,4CAAO,WAA2BC,GAA3B,mBAAAC,EAAA,sEACoBC,MAAM,GAAD,OAAIJ,EAAJ,YAAuB,CAC/CK,OAAQ,OACRC,KAAMC,KAAKC,UAAU,MAHtB,cACGC,EADH,gBAKwBA,EAASC,OALjC,cAKGC,EALH,OAMGC,EAAOD,EAAaC,KANvB,kBAOIA,GAPJ,4C,wCCDQ,SAASC,EAAcC,EAAgCF,GAClD,OAAZE,GAAoC,IAAhBF,EAAKG,QAGbC,IAAaF,GACrBG,UAAU,CACdC,QAAS,CAAEC,QAAS,QACpBC,OAAQ,CAAC,CACLC,KAAM,MACNC,OAAQ,CAAC,MAAO,OAChBC,mBAAmB,EACnBC,UAAW,CACPC,aAAc,EACdC,YAAa,OACbC,YAAa,GAEjBC,MAAO,CACHC,MAAM,EACNC,SAAU,WAEdC,UAAW,CACPF,MAAM,GAEVjB,W,WCKZ,IAEeoB,EAFO,CAAEC,sBAdxB,SAA+BC,GAM3B,OAJkBA,EAAUC,QAAO,SAACC,EAAeC,GAC/C,OAAOD,EAAIE,SAASD,EAAIE,UAAYH,EAA7B,sBAAuCA,GAAvC,CAA4CC,EAAIE,aACxD,IAEc5C,KAAI,SAAA4C,GAAQ,MAAK,CAC9BxC,KAAMwC,EACNC,MAAON,EAAUC,QAAO,SAACC,EAAKC,GAAN,OACpBA,EAAIE,WAAaA,EAAWH,EAAM,EAAIA,IAAK,QAKRK,uBA3B/C,SAAgCP,GAK5B,OAJmBA,EAAUC,QAAO,SAACC,EAAeC,GAChD,OAAOD,EAAIE,SAASD,EAAIK,WAAaN,EAA9B,sBAAwCA,GAAxC,CAA6CC,EAAIK,cACzD,IAEe/C,KAAI,SAAA+C,GAAS,MAAK,CAChC3C,KAAM2C,EACNF,MAAON,EAAUC,QAAO,SAACC,EAAKC,GAAN,OACpBA,EAAIK,YAAcA,EAAYN,EAAM,EAAIA,IAAK,SCHnDO,EAAmD,GCHzD,IAAMpD,EAAO,CAAC,CACVQ,KAAM,2BACN6C,UCHW,WAA2B,IAAD,ECA1B,WAA8B,IAAD,EACFC,mBAAS,wCADP,mBACjCC,EADiC,KACpBC,EADoB,OAERF,mBAAS,wCAFD,mBAEjCN,EAFiC,KAEvBS,EAFuB,OAGNH,mBAAS,wCAHH,mBAGjCH,EAHiC,KAGtBO,EAHsB,OAIdJ,mBAAS,wCAJK,mBAIjCK,EAJiC,KAI1BC,EAJ0B,OAKAN,mBAAS,wCALT,mBAKjCO,EALiC,KAKnBC,EALmB,KAOlCC,EAAcC,IAAMC,YAPc,4CASxC,kCAAArD,EAAA,mEACUmD,EAAYG,eADtB,aACU,EAAqBjB,MAD/B,iEAE6BvC,GAAY,UAAAqD,EAAYG,eAAZ,eAAqBjB,QAAS,IAFvE,OAEUkB,EAFV,OAGU9C,EAAOL,KAAKoD,MAAMD,GACxBX,EAAenC,EAAK,GAAGkC,aACvBG,EAAarC,EAAK,GAAG8B,WACrBM,EAAYpC,EAAK,GAAG2B,UACpBc,EAAgBzC,EAAK,GAAGwC,cACxBD,EAASvC,EAAK,GAAGsC,OARrB,6CATwC,sBAoBxC,MAAO,CACHJ,cACAJ,YACAH,WACAa,eACAF,QACAI,cACAM,QA3BoC,4CDSpCC,GAPAf,EAFiC,EAEjCA,YACAJ,EAHiC,EAGjCA,UACAH,EAJiC,EAIjCA,SACAa,EALiC,EAKjCA,aACAF,EANiC,EAMjCA,MACAI,EAPiC,EAOjCA,YACAM,EARiC,EAQjCA,QAGJ,OACI,uBAAME,GAAG,kBAAT,UACI,0BAASC,UAAU,eAAnB,UACI,0DAEI,CACI,mKACA,qQACA,kGACA,wFACFpE,KAAI,SAACqE,EAAMC,GAAP,OAAiB,4BAAgBD,GAARC,SAGvC,0BAASF,UAAU,aAAnB,UACI,sEACA,0BAAUA,UAAU,YAAYG,IAAKZ,IACrC,wBAAQS,UAAU,oBAAoBjE,QAAS8D,EAA/C,yCAEJ,0BAASG,UAAU,cAAnB,UACI,0DACA,0DACA,4BAAIjB,IACJ,0DACA,4BAAIP,IACJ,0DACA,4BAAIG,IACJ,0DACA,4BAAIU,IACJ,0DACA,4BAAIF,SA5BmB,8BDRpC,CACCnD,KAAM,2BACN6C,UGNW,WAA6B,IAAD,EJM5B,WAAgC,IAAD,EACZC,mBAASF,GADG,mBACnCwB,EADmC,KAC1BC,EAD0B,OAERvB,mBALL,IAGa,mBAEnCwB,EAFmC,KAExBC,EAFwB,KAIpCC,EAAehB,IAAMC,YACrBgB,EAAuBjB,IAAMC,YAC7BiB,EAAsBlB,IAAMC,YANQ,4CAa1C,kCAAArD,EAAA,yDACkD,KAAxC,UAAAoE,EAAad,eAAb,mBAAsBiB,aAAtB,eAA6B3D,QADvC,iEAE6Bd,EAAYoE,GAFzC,OAEUX,EAFV,OAGU9C,EAAOL,KAAKoD,MAAMD,GACxBU,EAAWxD,GAJf,4CAb0C,sBA+B1C,OAvBA+D,qBAAU,WACN9D,EAAc2D,EAAqBf,QAASmB,EAAGnC,uBAAuB0B,IACtEtD,EAAc4D,EAAoBhB,QAASmB,EAAG3C,sBAAsBkC,MACrE,CAACA,EAASK,EAAsBC,IAoB5B,CACHN,UACAI,eACAC,uBACAC,sBACAb,QApCsC,2CAqCtCiB,kBAjBsB,WAAO,IAAD,MACtBC,EAAa,IAAIC,WACvBD,EAAWE,OAAS,SAACC,GAAO,IAAD,KACvB,UAAAA,EAAEC,cAAF,eAAUC,SACHb,EAAY,UAACW,EAAEC,cAAH,aAAC,EAAUC,OAAOC,cAEzC,UAAAb,EAAad,eAAb,eAAsBiB,SACf,UAAAH,EAAad,eAAb,eAAsBiB,MAAM3D,QAAS,GACrC+D,EAAWO,WAAX,UAAsBd,EAAad,eAAnC,aAAsB,EAAsBiB,MAAM,MI1BzDY,GANAnB,EAFmC,EAEnCA,QACAI,EAHmC,EAGnCA,aACAC,EAJmC,EAInCA,qBACAC,EALmC,EAKnCA,oBACAb,EANmC,EAMnCA,QACAiB,EAPmC,EAOnCA,kBAGJ,OACI,uBAAMf,GAAG,oBAAT,UACI,0BAASC,UAAU,eAAnB,UACI,0DAEI,CACI,mKACA,6XACA,yHACA,kGACA,wFACFpE,KAAI,SAACqE,EAAMC,GAAP,OACD,4BAAgBD,GAARC,SAIrB,0BAASF,UAAU,cAAnB,UACI,0DACA,4BACI,uBAAO1C,KAAK,OAAO6C,IAAKK,EAAcgB,SAAUV,MAEpD,wBAAQd,UAAU,oBAAoBjE,QAAS8D,EAA/C,yCAEJ,0BAASG,UAAU,2BAAnB,UACI,0DACA,oCACI,4EACA,mBAAGyB,MAAO,CAAEC,QAA4B,IAAnBtB,EAAQpD,OAAe,SAAW,QAAvD,SACK,yCAEL,qBACI+C,GAAG,oBACHI,IAAKM,EACLgB,MAAO,CAAEC,QAA4B,IAAnBtB,EAAQpD,OAAe,OAAS,cAG1D,oCACI,4EACA,mBAAGyE,MAAO,CAAEC,QAA4B,IAAnBtB,EAAQpD,OAAe,SAAW,QAAvD,SACK,yCAEL,qBACI+C,GAAG,mBACHI,IAAKO,EACLe,MAAO,CAAEC,QAA4B,IAAnBtB,EAAQpD,OAAe,OAAS,iBAI9D,0BAASgD,UAAU,eAAnB,UACI,kFACA,mBAAGyB,MAAO,CAAEC,QAA4B,IAAnBtB,EAAQpD,OAAe,SAAW,QAAvD,SACK,yCAGDoD,EAAQxE,KAAI,SAACwF,EAAQlB,GAAT,OACR,0BAASF,UAAU,cAAnB,UACI,oBAAIA,UAAU,0BAAd,sCACA,4BAAIoB,EAAOrC,cACX,oBAAIiB,UAAU,wBAAd,sCACA,4BAAIoB,EAAOzC,YACX,oBAAIqB,UAAU,uBAAd,sCACA,4BAAIoB,EAAO5C,WACX,oBAAIwB,UAAU,2BAAd,sCACA,4BAAIoB,EAAO/B,eACX,oBAAIW,UAAU,oBAAd,sCACA,4BAAIoB,EAAOjC,UAVuBe,WAtDrB,+BCU1ByB,MApBf,WAAgB,IAAD,EJcA,WAAmB,IAAD,EACO7C,mBAAS,GADhB,mBACtBrD,EADsB,KAGvBmG,EATc,SAAC,GAAwF,IAAtFC,EAAqF,EAArFA,cACvB,MAAO,CACHnG,QAAS,SAACoG,GAAD,OAAsBD,EAAcC,KAO5BC,CAAgB,CAAEF,cAHV,OAK7B,OAAO,aACHrG,OACAC,cACGmG,GIrB6BI,GAA9BxG,EADK,EACLA,KAAMC,EADD,EACCA,WAAYC,EADb,EACaA,QAE1B,OACE,sBAAKsE,UAAU,MAAf,UACE,cAAC,EAAD,CAAKxE,KAAMA,EAAMC,WAAYA,EAAYC,QAASA,IAClD,qBAAKsE,UAAU,aAAf,SACE,qBAAKA,UAAU,gBAAf,SAEIxE,EAAKyG,QAAO,SAACpG,EAAKC,GAAN,OAAcA,IAAQL,KAC/BG,KAAI,SAAAC,GAAG,OACN,cAACA,EAAIgD,UAAL,eCVhBqD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.50fe0963.chunk.js","sourcesContent":["import './Nav.css'\r\n\r\ninterface NavProps {\r\n    tabs: { name: string, component: () => JSX.Element }[]\r\n    currentTab: number,\r\n    goToTab: (to: number) => void\r\n}\r\n\r\nexport default function Nav({ tabs, currentTab, goToTab }: NavProps) {\r\n    return (\r\n        <nav>\r\n            <ul data-selected-index={currentTab + 1}>\r\n                {\r\n                    tabs.map((tab, idx) => (\r\n                        <li onClick={() => goToTab(idx)} key={idx}>\r\n                            {tab.name}\r\n                        </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n        </nav >\r\n    )\r\n}","const baseURL = 'http://localhost:3001'\n\nexport async function fetchResult(comment: string) {\n    const response = await fetch(`${baseURL}/analyze`, {\n        method: 'POST',\n        body: JSON.stringify({})\n    })\n    const responseJson = await response.json()\n    const data = responseJson.data\n    return data\n}","import * as echarts from 'echarts'\r\nexport default function drawPieCharts(Element: HTMLDivElement | null, data: { value: number, name: string }[]) {\r\n    if (Element === null || data.length === 0) {\r\n        return\r\n    }\r\n    const myChart = echarts.init(Element)\r\n    myChart.setOption({\r\n        tooltip: { trigger: 'item' },\r\n        series: [{\r\n            type: 'pie',\r\n            radius: ['20%', '50%'],\r\n            avoidLabelOverlap: false,\r\n            itemStyle: {\r\n                borderRadius: 4,\r\n                borderColor: '#fff',\r\n                borderWidth: 2\r\n            },\r\n            label: {\r\n                show: true,\r\n                position: 'outside'\r\n            },\r\n            labelLine: {\r\n                show: true\r\n            },\r\n            data\r\n        }]\r\n    })\r\n}\r\n","import { multipleAnalysesReturnsElement } from '../../types'\r\n\r\nfunction getDataForDimensionPie(dataArray: multipleAnalysesReturnsElement[]) {\r\n    const dimensions = dataArray.reduce((acc: string[], cur) => {\r\n        return acc.includes(cur.dimension) ? acc : [...acc, cur.dimension]\r\n    }, [])\r\n\r\n    return dimensions.map(dimension => ({\r\n        name: dimension,\r\n        value: dataArray.reduce((acc, cur) =>\r\n            cur.dimension === dimension ? acc + 1 : acc, 0\r\n        )\r\n    }))\r\n}\r\n\r\nfunction getDataForAttitudePie(dataArray: multipleAnalysesReturnsElement[]) {\r\n    // 这里放置处理逻辑，下面是预设的返回数据\r\n    const attitudes = dataArray.reduce((acc: string[], cur) => {\r\n        return acc.includes(cur.attitude) ? acc : [...acc, cur.attitude]\r\n    }, [])\r\n\r\n    return attitudes.map(attitude => ({\r\n        name: attitude,\r\n        value: dataArray.reduce((acc, cur) =>\r\n            cur.attitude === attitude ? acc + 1 : acc, 0\r\n        )\r\n    }))\r\n}\r\n\r\nconst dataProcesser = { getDataForAttitudePie, getDataForDimensionPie }\r\n\r\nexport default dataProcesser","import React, { useState, useEffect } from 'react'\r\nimport drawPieCharts from './drawPieCharts'\r\nimport dp from './dataProcesser'\r\nimport { multipleAnalysesReturnsElement } from '../../types'\r\nimport { fetchResult } from '../../APIs'\r\n\r\nconst defaultInputData: string = ''\r\nconst defaultResults: multipleAnalysesReturnsElement[] = []\r\n\r\nexport default function useMultipleAnalyses() {\r\n    const [results, setResults] = useState(defaultResults)\r\n    const [inputData, setInputData] = useState(defaultInputData)\r\n\r\n    const inputFileRef = React.createRef<HTMLInputElement>()\r\n    const dimensionPieChartRef = React.createRef<HTMLDivElement>()\r\n    const attitudePieChartRef = React.createRef<HTMLDivElement>()\r\n\r\n    useEffect(() => {\r\n        drawPieCharts(dimensionPieChartRef.current, dp.getDataForDimensionPie(results))\r\n        drawPieCharts(attitudePieChartRef.current, dp.getDataForAttitudePie(results))\r\n    }, [results, dimensionPieChartRef, attitudePieChartRef])\r\n\r\n    async function analyze() {\r\n        if (!(inputFileRef.current?.files?.length === 0)) return\r\n        const dataString = await fetchResult(inputData)\r\n        const data = JSON.parse(dataString)\r\n        setResults(data)\r\n    }\r\n\r\n    const inputFileOnChange = () => {\r\n        const fileReader = new FileReader()\r\n        fileReader.onload = (e) => {\r\n            e.target?.result\r\n                && setInputData(e.target?.result.toString())\r\n        }\r\n        inputFileRef.current?.files\r\n            && inputFileRef.current?.files.length > 0\r\n            && fileReader.readAsText(inputFileRef.current?.files[0])\r\n    }\r\n\r\n    return {\r\n        results,\r\n        inputFileRef,\r\n        dimensionPieChartRef,\r\n        attitudePieChartRef,\r\n        analyze,\r\n        inputFileOnChange\r\n    }\r\n}","import { useState } from 'react';\r\nimport SingleAnalyses from './SingleAnalyses/SingleAnalyses'\r\nimport MultipleAnalyses from './MultipleAnalyses/MultipleAnalyses'\r\n\r\nconst tabs = [{\r\n    name: '单条分析',\r\n    component: SingleAnalyses\r\n}, {\r\n    name: '批量分析',\r\n    component: MultipleAnalyses\r\n}]\r\n\r\nconst getEventsHandle = ({ setCurrentTab }: { setCurrentTab: React.Dispatch<React.SetStateAction<number>> }) => {\r\n    return {\r\n        goToTab: (tabIndex: number) => setCurrentTab(tabIndex)\r\n    }\r\n}\r\n\r\nexport default function useApp() {\r\n    const [currentTab, setCurrentTab] = useState(0)\r\n\r\n    const eventsHandle = getEventsHandle({ setCurrentTab })\r\n\r\n    return {\r\n        tabs,\r\n        currentTab,\r\n        ...eventsHandle\r\n    }\r\n}\r\n","import './SingleAnalyses.css'\r\nimport useSingleAnalyses from './useSingleAnalyses'\r\n\r\nexport default function SingleAnalyses() {\r\n    const {\r\n        commentText,\r\n        dimension,\r\n        attitude,\r\n        textFeatures,\r\n        reply,\r\n        textAreaRef,\r\n        analyze\r\n    } = useSingleAnalyses()\r\n\r\n    return (\r\n        <main id=\"single-analyses\" key=\"单条分析\">\r\n            <article className=\"introduction\">\r\n                <h1>使用说明</h1>\r\n                {\r\n                    [\r\n                        '该页面利用人工智能分析[某行业]产品的评论。需要 Python 环境。',\r\n                        '输入评论内容，点击开始分析按钮，将输出其评论角度，评论态度以及人工智能给出的自动回复。',\r\n                        '评论角度分为[n]方面，分别是：string[]。',\r\n                        '评论态度分为两种：正面和负面'\r\n                    ].map((item, index) => <p key={index}>{item}</p>)\r\n                }\r\n            </article>\r\n            <article className=\"input-area\">\r\n                <h1>输入评论内容</h1>\r\n                <textarea className=\"text-area\" ref={textAreaRef} />\r\n                <button className=\"ms-button primary\" onClick={analyze}>开始分析</button>\r\n            </article>\r\n            <article className=\"output-area\">\r\n                <h1>分析结果</h1>\r\n                <h2>评论原文</h2>\r\n                <p>{commentText}</p>\r\n                <h2>评论态度</h2>\r\n                <p>{attitude}</p>\r\n                <h2>评论角度</h2>\r\n                <p>{dimension}</p>\r\n                <h2>文字特征</h2>\r\n                <p>{textFeatures}</p>\r\n                <h2>自动回复</h2>\r\n                <p>{reply}</p>\r\n            </article>\r\n        </main>\r\n    )\r\n}","import React, { useState } from \"react\"\r\nimport { fetchResult } from '../../APIs'\r\n\r\nexport default function useSingleAnalyses() {\r\n    const [commentText, setCommentText] = useState('等待输入评论')\r\n    const [attitude, setAttitude] = useState('等待输入评论')\r\n    const [dimension, setDimension] = useState('等待输入评论')\r\n    const [reply, setReply] = useState('等待输入评论')\r\n    const [textFeatures, setTextFeatures] = useState('等待输入评论')\r\n\r\n    const textAreaRef = React.createRef<HTMLTextAreaElement>()\r\n\r\n    async function analyze() {\r\n        if (!(textAreaRef.current?.value)) return\r\n        const dataString = await fetchResult(textAreaRef.current?.value || '')\r\n        const data = JSON.parse(dataString)\r\n        setCommentText(data[0].commentText)\r\n        setDimension(data[0].dimension)\r\n        setAttitude(data[0].attitude)\r\n        setTextFeatures(data[0].textFeatures)\r\n        setReply(data[0].reply)\r\n    }\r\n\r\n    return {\r\n        commentText,\r\n        dimension,\r\n        attitude,\r\n        textFeatures,\r\n        reply,\r\n        textAreaRef,\r\n        analyze\r\n    }\r\n}\r\n","import './MultipleAnalyses.css'\r\nimport useMultipleAnalyses from './useMultipleAnalyses'\r\n\r\nexport default function MultipleAnalyses() {\r\n    const {\r\n        results,\r\n        inputFileRef,\r\n        dimensionPieChartRef,\r\n        attitudePieChartRef,\r\n        analyze,\r\n        inputFileOnChange\r\n    } = useMultipleAnalyses()\r\n\r\n    return (\r\n        <main id=\"multiple-analyses\" key=\"多条分析\">\r\n            <article className=\"introduction\">\r\n                <h1>使用说明</h1>\r\n                {\r\n                    [\r\n                        '该页面利用人工智能分析[某行业]产品的评论。需要 Python 环境。',\r\n                        '导入数据文件，点击开始分析按钮，将输出各条评论对应的评论角度、评论态度、文字特征、人工智能给出的自动回复，以及总体的统计数据。',\r\n                        '数据文件要求为 JSON 文件，格式为：{ \"data\" : string[] } 。',\r\n                        '评论角度分为[n]方面，分别是：string[]。',\r\n                        '评论态度分为两种：正面和负面'\r\n                    ].map((item, index) =>\r\n                        (<p key={index}>{item}</p>)\r\n                    )\r\n                }\r\n            </article>\r\n            <article className=\"import-area\">\r\n                <h1>导入文件</h1>\r\n                <p>\r\n                    <input type=\"file\" ref={inputFileRef} onChange={inputFileOnChange} />\r\n                </p>\r\n                <button className=\"ms-button primary\" onClick={analyze}>开始分析</button>\r\n            </article>\r\n            <article className=\"statistical-results-area\">\r\n                <h1>统计结果</h1>\r\n                <section>\r\n                    <h2>各角度评论占比</h2>\r\n                    <p style={{ display: results.length === 0 ? 'inline' : 'none' }}>\r\n                        {'等待导入数据'}\r\n                    </p>\r\n                    <div\r\n                        id=\"dimensionPieChart\"\r\n                        ref={dimensionPieChartRef}\r\n                        style={{ display: results.length === 0 ? 'none' : 'block' }}>\r\n                    </div>\r\n                </section>\r\n                <section>\r\n                    <h2>各态度评论占比</h2>\r\n                    <p style={{ display: results.length === 0 ? 'inline' : 'none' }}>\r\n                        {'等待导入数据'}\r\n                    </p>\r\n                    <div\r\n                        id=\"attitudePieChart\"\r\n                        ref={attitudePieChartRef}\r\n                        style={{ display: results.length === 0 ? 'none' : 'block' }}>\r\n                    </div>\r\n                </section>\r\n            </article>\r\n            <article className=\"results-area\">\r\n                <h1>各条评论分析结果</h1>\r\n                <p style={{ display: results.length === 0 ? 'inline' : 'none' }}>\r\n                    {'等待导入数据'}\r\n                </p>\r\n                {\r\n                    results.map((result, index) => (\r\n                        <article className=\"result-item\" key={index}>\r\n                            <h2 className=\"result-item-commentText\">评论原文</h2>\r\n                            <p>{result.commentText}</p>\r\n                            <h2 className=\"result-item-dimension\">评论角度</h2>\r\n                            <p>{result.dimension}</p>\r\n                            <h2 className=\"result-item-attitude\">评论态度</h2>\r\n                            <p>{result.attitude}</p>\r\n                            <h2 className=\"result-item-textFeatures\">文字特征</h2>\r\n                            <p>{result.textFeatures}</p>\r\n                            <h2 className=\"result-item-reply\">自动回复</h2>\r\n                            <p>{result.reply}</p>\r\n                        </article>\r\n                    ))\r\n                }\r\n            </article>\r\n        </main>\r\n    )\r\n}","import './App.css'\r\nimport Nav from './Nav/Nav'\r\nimport useApp from './useApp'\r\n\r\nfunction App() {\r\n  const { tabs, currentTab, goToTab } = useApp()\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Nav tabs={tabs} currentTab={currentTab} goToTab={goToTab} />\r\n      <div className=\"tab-shaper\">\r\n        <div className=\"tab-container\">\r\n          {\r\n            tabs.filter((tab, idx) => idx === currentTab)\r\n              .map(tab =>\r\n                <tab.component />\r\n              )\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App/App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}